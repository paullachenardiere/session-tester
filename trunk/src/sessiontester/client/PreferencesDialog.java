/*
 * Session Tester - The Exploratory Testing Tool, a tool to help manage
 * exploratory testing sessions, prime testing ideas and record test results.
 *
 * Copyright (C) 2010 Jonathan Kohl, Aaron West
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/>.
 */

package sessiontester.client;

import java.awt.HeadlessException;
import java.util.logging.Logger;
import java.util.logging.Level;

import javax.swing.JFileChooser;

import sessiontester.PreferencesUtils;

/**
 * Main class for the preferences dialog
 * @author martin
 */
public class PreferencesDialog extends javax.swing.JDialog
{
    /**
     * Creates new form Preferences
     * @param parent
     */
    public PreferencesDialog(java.awt.Frame parent)
    {
        super(parent);
        initComponents();

        prefs = new PreferencesUtils();

        SetupValues();
        getRootPane().setDefaultButton(jButtonOK);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldDefaultTesterName = new javax.swing.JTextField();
        jLabelDefaultTesterName = new javax.swing.JLabel();
        jButtonBrowseSessionPath = new javax.swing.JButton();
        jLabelDefaultSessionFilePath = new javax.swing.JLabel();
        jTextFieldDefaultSessionFilePath = new javax.swing.JTextField();
        jLabelDefaultWebReportPath = new javax.swing.JLabel();
        jTextFieldDefaultWebReportPath = new javax.swing.JTextField();
        jButtonBrowseWebReportPath = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preferences");
        setIconImage(null);
        setName("PreferencesDialog"); // NOI18N

        jButtonOK.setText("OK");
        jButtonOK.setName("jButtonOK"); // NOI18N
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.setName("jButtonCancel"); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonReset.setText("Reset");
        jButtonReset.setName("jButtonReset"); // NOI18N
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jTabbedPane1.setName("jTabbedPaneProperties"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jTextFieldDefaultTesterName.setName("jTextFieldDefaultTesterName"); // NOI18N

        jLabelDefaultTesterName.setText("Default Tester Name:");
        jLabelDefaultTesterName.setName("jLabelDefaultTesterName"); // NOI18N

        jButtonBrowseSessionPath.setText("...");
        jButtonBrowseSessionPath.setName("jButtonBrowseSessionPath"); // NOI18N
        jButtonBrowseSessionPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseSessionPathActionPerformed(evt);
            }
        });

        jLabelDefaultSessionFilePath.setText("Default Session File Path:");
        jLabelDefaultSessionFilePath.setName("jLabelDefaultSessionFilePath"); // NOI18N

        jTextFieldDefaultSessionFilePath.setName("jTextFieldDefaultSessionFilePath"); // NOI18N

        jLabelDefaultWebReportPath.setText("Default Web Report Path:");
        jLabelDefaultWebReportPath.setName("jLabelDefaultWebReportPath"); // NOI18N

        jTextFieldDefaultWebReportPath.setName("jTextFieldDefaultWebReportPath"); // NOI18N

        jButtonBrowseWebReportPath.setText("...");
        jButtonBrowseWebReportPath.setName("jButtonBrowseWebReportPath"); // NOI18N
        jButtonBrowseWebReportPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseWebReportPathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDefaultTesterName)
                    .addComponent(jLabelDefaultSessionFilePath)
                    .addComponent(jLabelDefaultWebReportPath))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jTextFieldDefaultWebReportPath, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDefaultTesterName, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                            .addComponent(jTextFieldDefaultSessionFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonBrowseSessionPath)
                    .addComponent(jButtonBrowseWebReportPath))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDefaultTesterName)
                    .addComponent(jTextFieldDefaultTesterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDefaultSessionFilePath)
                    .addComponent(jTextFieldDefaultSessionFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBrowseSessionPath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDefaultWebReportPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDefaultWebReportPath, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBrowseWebReportPath))
                .addContainerGap(277, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 388, Short.MAX_VALUE)
                        .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonReset)
                    .addComponent(jButtonOK)
                    .addComponent(jButtonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action from OK button
     * @param evt
     */
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        DoSaveValues();
        this.dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed

    /**
     * Action from Reset button
     * @param evt
     */
    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        DoResetValues();
    }//GEN-LAST:event_jButtonResetActionPerformed

    /**
     * Action from Cancel button
     * @param evt
     */
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * Action from Browse button for Session Path
     * @param evt
     */
    private void jButtonBrowseSessionPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseSessionPathActionPerformed
        BrowseSessionFilePath();
    }//GEN-LAST:event_jButtonBrowseSessionPathActionPerformed

    /**
     * Action from Browse button for Web Report Path
     * @param evt
     */
    private void jButtonBrowseWebReportPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseWebReportPathActionPerformed
        BrowseWebReportPath();
    }//GEN-LAST:event_jButtonBrowseWebReportPathActionPerformed


    /**
     * Main function
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                PreferencesDialog dialog =
                        new PreferencesDialog(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);

            }
        });
    }

    /**
     * Browse for Session File Path
     */
    public void BrowseSessionFilePath()
    {
        String strVal;
        strVal = OpenDirectoryChooser(GetDefaultSessionFilePath());

        SetDefaultSessionFilePath(strVal);            
    }
    
    /**
     * Browse for Web Report Path
     */
    public void BrowseWebReportPath()
    {
        String strVal;

        strVal = OpenDirectoryChooser(GetDefaultWebReportPath());

        SetDefaultWebReportPath(strVal);
    }

    /**
     * Keep the controls of the UI set in appropriate available state.
     */
    private void UpdateUI()
    {
     
    }

    /**
     * Load values from preferences and set them in UI
     */
    public void SetupValues()
    {
        SetDefaultWebReportPath(prefs.GetWebReportPath());
        SetDefaultTesterName(prefs.GetTesterName());
        SetDefaultSessionFilePath(prefs.GetSessionFilePath());
    }

    /**
     * Save the files to preferences
     */
    public void DoSaveValues()
    {
        prefs.SetSessionFilePath(GetDefaultSessionFilePath());
        prefs.SetTesterName(GetDefaultTesterName());
        prefs.SetWebReportPath(GetDefaultWebReportPath());
        prefs.ExportPrefs();
    }

    /**
     * Reset to default values
     */
    public void DoResetValues()
    {
        prefs.ResetPreferences();
        SetupValues();
    }

    /**
     * Get the Tester Name from UI
     * @return
     */
    public String GetDefaultTesterName()
    {
        String strVal = "";
        try
        {
            strVal = jTextFieldDefaultTesterName.getText();
        }
        catch(NullPointerException e) {
            logger.log(Level.SEVERE,
                    "Null Pointer Exception:\n", e);
        }
        return strVal;
    }

    /**
     * Get Web Report Path from UI
     * @return
     */
    public String GetDefaultWebReportPath()
    {
        String strVal = "";
        try
        {
            strVal = jTextFieldDefaultWebReportPath.getText();
        }
        catch(NullPointerException e) {
            logger.log(Level.SEVERE,
                    "Null Pointer Exception:\n", e);
        }
        return strVal;
    }

    /**
     * Get Session File Path from UI
     * @return
     */
    public String GetDefaultSessionFilePath()
    {
        String strVal = "";
        try
        {
            strVal = jTextFieldDefaultSessionFilePath.getText();
        }
        catch(NullPointerException e) {
            logger.log(Level.SEVERE,
                    "Null Pointer Exception:\n", e);
        }
        return strVal;
    }

    /**
     * Select a directory and return it
     * @param strStartPath
     * @return
     */
    public String OpenDirectoryChooser(String strStartPath)
    {
        String strDirPath = strStartPath;
        try
        {
            JFileChooser jf = new JFileChooser(strStartPath);
            jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            jf.showOpenDialog(jPanel1);

            strDirPath = jf.getSelectedFile().getAbsolutePath();
        }
        catch(IllegalArgumentException e)
        {
            logger.log(Level.SEVERE,
                    "Illegal Argument Exception:\n", e);
        }
        catch(HeadlessException e)
        {
            logger.log(Level.SEVERE,
                    "Headless Exception:\n", e);
        }

        return strDirPath;
    }

    /**
     * Set Session File Path in UI
     * @param strVal
     */
    public void SetDefaultSessionFilePath(String strVal)
    {
        try
        {
            jTextFieldDefaultSessionFilePath.setText(strVal);
        }
        catch(Exception e) {
            logger.log(Level.SEVERE,
                    "Exception:\n", e);
        }
    }

    /**
     * Set Tester Name in UI
     * @param strVal
     */
    public void SetDefaultTesterName(String strVal)
    {
        try
        {
            jTextFieldDefaultTesterName.setText(strVal);
        }
        catch(Exception e) {
            logger.log(Level.SEVERE,
                    "Exception:\n", e);
        }
    }

    /**
     * Set Web Report Path in UI
     * @param strVal
     */
    public void SetDefaultWebReportPath(String strVal)
    {
        try
        {
            jTextFieldDefaultWebReportPath.setText(strVal);
        }
        catch(Exception e) {
            logger.log(Level.SEVERE,
                    "Exception:\n", e);
        }
    }

    /**
     * Determine if the UI has been changed or not
     * @return
     */
    private boolean IsDirty()
    {
        return boolDirty;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowseSessionPath;
    private javax.swing.JButton jButtonBrowseWebReportPath;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JLabel jLabelDefaultSessionFilePath;
    private javax.swing.JLabel jLabelDefaultTesterName;
    private javax.swing.JLabel jLabelDefaultWebReportPath;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldDefaultSessionFilePath;
    private javax.swing.JTextField jTextFieldDefaultTesterName;
    private javax.swing.JTextField jTextFieldDefaultWebReportPath;
    // End of variables declaration//GEN-END:variables

    // Variables
    private boolean boolDirty;
    private PreferencesUtils prefs;
    private static Logger logger =
            Logger.getLogger(PreferencesDialog.class.getName());
}
